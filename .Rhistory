abs(bvECBiltMax$timeTo)/1000, ' kybp')
bvECBiltMax$time <- factor(bvECBiltMax$time,
levels = rev(mixedsort(bvECBiltMax$time)))
bvECBiltMax_plot <- ggplot(bvECBiltMax, aes(time, centroidVelocity, group = 1)) +
geom_point() + geom_line() +
ggtitle("ECBilt Max") + xlab("time period") + ylab("centroid velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# combine all biotic velocities into one df for plotting #
bv_all <- data.frame(bvPollen$time,
bvPollen$centroidVelocity,
bvHadleyMeans$centroidVelocity,
bvCCSMMeans$centroidVelocity,
bvECBiltMeans$centroidVelocity)
colnames(bv_all) <- c("Time", "Pollen","HadAM3H", "CCSM", "ECBilt")
bv_all <- cbind(bv_all[1], utils::stack(bv_all[2:5]))
colnames(bv_all) <- c("Time", "centroidVelocity", "climateSource")
pdf(file = paste0('./pdf/biotic_velocity.pdf'), width = 11, height = 8.5)
plot_grid(bvPollen_plot, plot_grid(bvHadleyMeans_plot, bvHadleyMax_plot),
plot_grid(bvCCSMMeans_plot, bvCCSMMax_plot),
plot_grid(bvECBiltMeans_plot, bvECBiltMax_plot), ncol = 1)
ymax <- ceiling(max(bv_all$centroidVelocity))
ymin <- floor(min(bv_all$centroidVelocity))
# plot all biotic velocities separately #
ggplot(bv_all[bv_all$climateSource == 'Pollen',],
aes(x = Time, y = centroidVelocity, group = climateSource, color = climateSource)) +
geom_point() + geom_line() + theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(ymin, ymax) +
labs(title = "Biotic Velocity\n", x = "Time Period",
y = "Centroid Velocity (m/yr)", color = "GCM") +
scale_color_manual(values = c('#66c2a5'))
ggplot(bv_all[bv_all$climateSource == 'HadAM3H',],
aes(x = Time, y = centroidVelocity, group = climateSource, color = climateSource)) +
geom_point() + geom_line() + theme_classic() +
ylim(ymin, ymax) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Biotic Velocity\n", x = "Time Period",
y = "Centroid Velocity (m/yr)", color = "GCM") +
scale_color_manual(values = c('#fc8d62'))
ggplot(bv_all[bv_all$climateSource == 'CCSM',],
aes(x = Time, y = centroidVelocity, group = climateSource, color = climateSource)) +
geom_point() + geom_line() + theme_classic() +
ylim(ymin, ymax) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Biotic Velocity\n", x = "Time Period",
y = "Centroid Velocity (m/yr)", color = "GCM") +
scale_color_manual(values = c('#8da0cb'))
ggplot(bv_all[bv_all$climateSource == 'ECBilt',],
aes(x = Time, y = centroidVelocity, group = climateSource, color = climateSource)) +
geom_point() + geom_line() + theme_classic() +
ylim(ymin, ymax) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Biotic Velocity\n", x = "Time Period",
y = "Centroid Velocity (m/yr)", color = "GCM") +
scale_color_manual(values = c('#e78ac3'))
# plot only ENM biotic velocities #
ggplot(bv_all[bv_all$climateSource != 'Pollen',],
aes(x = Time, y = centroidVelocity, group = climateSource, color = climateSource)) +
geom_point() + geom_line() + theme_classic() +
ylim(ymin, ymax) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Biotic Velocity\n", x = "Time Period",
y = "Centroid Velocity (m/yr)", color = "GCM") +
scale_color_manual(values = c('#fc8d62','#8da0cb','#e78ac3'))
# plot all biotic velocities together #
ggplot(bv_all,
aes(x = Time, y = centroidVelocity, group = climateSource, color = climateSource)) +
geom_point() + geom_line() + theme_classic() +
ylim(ymin, ymax) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Biotic Velocity\n", x = "Time Period",
y = "Centroid Velocity (m/yr)", color = "GCM") +
scale_color_manual(values = c('#66c2a5','#fc8d62','#8da0cb','#e78ac3'))
ggplot(bv_all,
aes(x = Time, y = centroidVelocity, group = climateSource, color = climateSource)) +
geom_point() + geom_line(aes(size = climateSource)) + theme_classic() +
ylim(ymin, ymax) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Biotic Velocity\n", x = "Time Period",
y = "Centroid Velocity (m/yr)", color = "GCM") +
scale_color_manual(values = c('gold','gray84', 'gray84','gray84')) +
scale_size_manual(values = c(1, 0.5, 0.5, 0.5))
### pollen on X axis, GCM on Y axis ###
bv_all <- data.frame(bvPollen$time, bvPollen$centroidVelocity,
bvHadleyMeans$centroidVelocity,
bvECBiltMeans$centroidVelocity,
bvCCSMMeans$centroidVelocity)
bv_all$`Time Period` <- c(rep('15-21 Kybp', 6), rep('10-15 Kybp', 5),
rep('5-10 Kybp', 5), rep('0-5 Kybp', 5))
bv_all$`Time Period` <- factor(bv_all$`Time Period`, levels = c('0-5 Kybp', '5-10 Kybp',
'10-15 Kybp', '15-21 Kybp'))
ymax <- ceiling(max(cbind(bv_all$bvPollen.centroidVelocity,
bv_all$bvHadleyMeans.centroidVelocity,
bv_all$bvECBiltMeans.centroidVelocity,
bv_all$bvCCSMMeans.centroidVelocity)))
ymin <- floor(min(cbind(bv_all$bvPollen.centroidVelocity,
bv_all$bvHadleyMeans.centroidVelocity,
bv_all$bvECBiltMeans.centroidVelocity,
bv_all$bvCCSMMeans.centroidVelocity)))
# hadley vs. pollen #
hadley_pollen <- ggplot(bv_all, aes(bvPollen.centroidVelocity, bvHadleyMeans.centroidVelocity,
color = `Time Period`)) +
geom_point(size = 2) + xlim(ymin, ymax) + ylim(ymin, ymax) +
geom_abline(slope = 1, intercept = 0, color = 'gray84') + theme_classic() +
labs(title = "Pollen vs HadAM3H Biotic Velocities", x = "Pollen Centroid Velocity (m/yr)",
y = "HadAM3H Centroid Velocity (m/yr)")
# ecbilt vs. pollen #
ecbilt_pollen <- ggplot(bv_all, aes(bvPollen.centroidVelocity, bvECBiltMeans.centroidVelocity,
color = `Time Period`)) +
geom_point(size = 2) + xlim(ymin, ymax) + ylim(ymin, ymax) +
geom_abline(slope = 1, intercept = 0, color = 'gray84') + theme_classic() +
labs(title = "Pollen vs ECBilt Biotic Velocities", x = "Pollen Centroid Velocity (m/yr)",
y = "ECBilt Centroid Velocity (m/yr)")
# ccsm vs. pollen #
ccsm_pollen <- ggplot(bv_all, aes(bvPollen.centroidVelocity, bvCCSMMeans.centroidVelocity,
color = `Time Period`)) +
geom_point(size = 2) + xlim(ymin, ymax) + ylim(ymin, ymax) +
geom_abline(slope = 1, intercept = 0, color = 'gray84') + theme_classic() +
labs(title = "Pollen vs CCSM Biotic Velocities", x = "Pollen Centroid Velocity (m/yr)",
y = "CCSM Centroid Velocity (m/yr)")
# hadley vs. ccsm #
hadley_ccsm <- ggplot(bv_all, aes(bvCCSMMeans.centroidVelocity, bvHadleyMeans.centroidVelocity,
color = bvPollen.time, label = bvPollen.time)) +
geom_point() + xlim(ymin, ymax) + ylim(ymin, ymax) +
geom_abline(slope = 1, intercept = 0, color = 'gray84') +
geom_text_repel(min.segment.length = 0) +
theme_classic() +
theme(legend.position = "none") +
labs(title = "HadAM3H vs CCSM Biotic Velocities", x = "CCSM Centroid Velocity (m/yr)",
y = "HadAM3H Centroid Velocity (m/yr)")
# hadley vs. ecbilt #
hadley_ecbilt <- ggplot(bv_all, aes(bvHadleyMeans.centroidVelocity, bvECBiltMeans.centroidVelocity,
color = bvPollen.time, label = bvPollen.time)) +
geom_point() + xlim(ymin, ymax) + ylim(ymin, ymax) +
geom_abline(slope = 1, intercept = 0, color = 'gray84') +
geom_text_repel(min.segment.length = 0) +
theme_classic() +
theme(legend.position = "none") +
labs(title = "HadAM3H vs ECBilt Biotic Velocities", x = "HadAM3H Centroid Velocity (m/yr)",
y = "ECBilt Centroid Velocity (m/yr)")
# ccsm vs. ecbilt #
ccsm_ecbilt <- ggplot(bv_all, aes(bvECBiltMeans.centroidVelocity, bvCCSMMeans.centroidVelocity,
color = bvPollen.time, label = bvPollen.time)) +
geom_point() + xlim(ymin, ymax) + ylim(ymin, ymax) +
geom_abline(slope = 1, intercept = 0, color = 'gray84') +
geom_text_repel(min.segment.length = 0) +
theme_classic() +
theme(legend.position = "none") +
labs(title = "ECBilt vs CCSM Biotic Velocities", x = "ECBilt Centroid Velocity (m/yr)",
y = "CCSM Centroid Velocity (m/yr)")
plot(hadley_pollen)
plot(ccsm_pollen)
plot(ecbilt_pollen)
plot_grid(hadley_pollen, ccsm_pollen, ecbilt_pollen, ncol = 2)
plot(hadley_ccsm)
plot(hadley_ecbilt)
plot(ccsm_ecbilt)
plot_grid(hadley_ccsm, hadley_ecbilt, ccsm_ecbilt, ncol = 2)
### biotic velocity lagged ###
# pollen biotic velocity at time t+1 on X, GCM at time t on Y-axis #
bv_lag <- bv_all
bv_lag <- transform(bv_lag, bvPollen.centroidVelocity = dplyr::lead(bvPollen.centroidVelocity))
# remove the last row bv there is no pollen data point due to lag #
# (the offset) leaves the final data point for pollen as NA #
bv_lag <- bv_lag[-c(nrow(bv_lag)),]
# if wanting to correct for larger bv's for pollen #
# bv_lag$bvPollen.centroidVelocity <- bv_lag$bvPollen.centroidVelocity/4
# hadley vs. pollen lagged #
hadley_pollen_lag <-
ggplot(bv_lag, aes(bvPollen.centroidVelocity, bvHadleyMeans.centroidVelocity,
color = bvPollen.time, label = bvPollen.time)) +
geom_point() + xlim(ymin, ymax) + ylim(ymin, ymax) +
geom_abline(slope = 1, intercept = 0, color = 'gray84') +
geom_text_repel(min.segment.length = 0) +
theme_classic() +
theme(legend.position = "none") +
labs(title = "Pollen vs HadAM3H Biotic Velocities LAGGED", x = "Pollen Centroid Velocity (m/yr)",
y = "HadAM3H Centroid Velocity (m/yr)")
# ccsm vs. pollen lagged #
ccsm_pollen_lag <-
ggplot(bv_lag, aes(bvPollen.centroidVelocity, bvCCSMMeans.centroidVelocity,
color = bvPollen.time, label = bvPollen.time)) +
geom_point() + xlim(ymin, ymax) + ylim(ymin, ymax) +
geom_abline(slope = 1, intercept = 0, color = 'gray84') +
geom_text_repel(min.segment.length = 0) +
theme_classic() +
theme(legend.position = "none") +
labs(title = "Pollen vs CCSM Biotic Velocities LAGGED", x = "Pollen Centroid Velocity (m/yr)",
y = "CCSM Centroid Velocity (m/yr)")
# ecbilt vs. pollen lagged #
ecbilt_pollen_lag <-
ggplot(bv_lag, aes(bvPollen.centroidVelocity, bvECBiltMeans.centroidVelocity,
color = bvPollen.time, label = bvPollen.time)) +
geom_point() + xlim(ymin, ymax) + ylim(ymin, ymax) +
geom_abline(slope = 1, intercept = 0, color = 'gray84') +
geom_text_repel(min.segment.length = 0) +
theme_classic() +
theme(legend.position = "none") +
labs(title = "Pollen vs ECBilt Biotic Velocities LAGGED", x = "Pollen Centroid Velocity (m/yr)",
y = "ECBilt Centroid Velocity (m/yr)")
plot(hadley_pollen_lag)
plot(ccsm_pollen_lag)
plot(ecbilt_pollen_lag)
plot_grid(hadley_pollen_lag, ccsm_pollen_lag, ecbilt_pollen_lag, ncol = 2)
# save.image('./workspaces/07 - analyses, biotic velocity')
dev.off()
##### correlation #####
pdf(file = './pdf/correlation_maps.pdf', width = 11, height = 8.5)
par(mfrow = c(2,3), mar = c(2,1,5,1)+0.1)
for(k in 1:22) {
for(gcm in gcmList) {
load(paste0('./workspaces/07 - ', gcm, ' genus merge'))
if(gcm == 'ccsm') g <- 'CCSM'
if(gcm == 'ecbilt') g <- 'ECBilt'
if (gcm == 'hadley') g <- 'HadAM3H'
title <- paste0('Pearson Correlation,\nPollen & ', g, '\n', climYears[k], ' ybp')
projection(meansList) <- getCRS('wgs84')
thisRast <- raster::resample(meansList[[k]], pollenRast[[k]], method = 'bilinear')
cor <- rasterCorrelation(thisRast, pollenRast[[k]], type = 'pearson', s = 5)
plot(cor, main = title, axes = F, box = F, legend.mar = 10, col = colors)
plot(raster::crop(sp::spTransform(world, CRS(projection(cor))), extent(cor)),
border = 'black', add = T)
}
load('./workspaces/07 - hadley genus merge')
hadley <- 'HadAM3H'
hadleyMeans <- meansList
load('./workspaces/07 - ecbilt genus merge')
ecbilt <- 'ECBilt'
ecbiltMeans <- meansList
load('./workspaces/07 - ccsm genus merge')
ccsm <- 'CCSM'
ccsmMeans <- meansList
title <- paste0('Pearson Correlation,\n', hadley, ' & ', ecbilt, '\n', climYears[k], ' ybp')
cor <- rasterCorrelation(hadleyMeans[[k]], ecbiltMeans[[k]], type = 'pearson')
plot(cor, main = title, axes = F, box = F, legend.mar = 10, col = colors)
plot(raster::crop(sp::spTransform(world, CRS(projection(cor))), extent(cor)),
border = 'black', add = T)
title <- paste0('Pearson Correlation,\n', hadley, ' & ', ccsm, '\n', climYears[k], ' ybp')
cor <- rasterCorrelation(hadleyMeans[[k]], ccsmMeans[[k]], type = 'pearson')
plot(cor, main = title, axes = F, box = F, legend.mar = 10, col = colors)
plot(raster::crop(sp::spTransform(world, CRS(projection(cor))), extent(cor)),
border = 'black', add = T)
title <- paste0('Pearson Correlation,\n', ccsm, ' & ', ecbilt, '\n', climYears[k], ' ybp')
cor <- rasterCorrelation(ccsmMeans[[k]], ecbiltMeans[[k]], type = 'pearson')
plot(cor, main = title, axes = F, box = F, legend.mar = 10, col = colors)
plot(raster::crop(sp::spTransform(world, CRS(projection(cor))), extent(cor)),
border = 'black', add = T)
}
dev.off()
corr_list <- c()
df <- data.frame(row.names = c('Pollen', 'HadAM3H', 'CCSM', 'ECBilt'))
for(g in 1:22) {
st <- stack(pollenRast[[g]], hadleyMeans[[g]], ccsmMeans[[g]], ecbiltMeans[[g]])
x <- layerStats(st, 'pearson', na.rm = T)
corr_matrix <- as.data.frame(x$`pearson correlation coefficient`,
row.names = c('Pollen', 'HadAM3H', 'CCSM', 'ECBilt'))
df <- cbind(df, corr_matrix[1])
}
colnames(df) <- paste0(climYears, ' YBP')
# do this for all GCMs & yrs #
corDf <- data.frame(climYears)
for (gcm in gcmList) { # compare pollen to each gcm
correlations <- list()
for(a in 1:22) {
load(paste0('./workspaces/07 - ', gcm, ' genus merge'))
if(gcm == 'ccsm') g <- 'CCSM'
if(gcm == 'ecbilt') g <- 'ECBilt'
if(gcm == 'hadley') g <- 'HadAM3H'
thisRast <- raster::resample(meansList[[a]], pollenRast[[a]], method = 'bilinear')
niche <- enmSdm::compareNiches(as.vector(as.matrix(pollenRast[[a]])),
as.vector(as.matrix(thisRast)), na.rm = T)
correlations <- append(correlations, niche['cor'])
}
names(correlations) <- climYears
corDf <- cbind(corDf, t(data.frame(correlations)))
colnames(corDf)[ncol(corDf)] <- paste0('Pollen & ', g)
}
correlations <- list()
for(k in 1:22) { # hadley vs. ccsm
niche <- enmSdm::compareNiches(as.vector(as.matrix(hadleyMeans[[k]])),
as.vector(as.matrix(ccsmMeans[[k]])), na.rm = T)
correlations <- append(correlations, niche['cor'])
}
names(correlations) <- climYears
corDf <- cbind(corDf, t(data.frame(correlations)))
colnames(corDf)[ncol(corDf)] <- paste0(hadley, ' & ', ccsm)
correlations <- list()
for(k in 1:22) { # hadley vs. ecbilt
niche <- enmSdm::compareNiches(as.vector(as.matrix(hadleyMeans[[k]])),
as.vector(as.matrix(ecbiltMeans[[k]])), na.rm = T)
correlations <- append(correlations, niche['cor'])
}
names(correlations) <- climYears
corDf <- cbind(corDf, t(data.frame(correlations)))
colnames(corDf)[ncol(corDf)] <- paste0(hadley, ' & ', ecbilt)
correlations <- list()
for(k in 1:22) { # ecbilt vs. ccsm
niche <- enmSdm::compareNiches(as.vector(as.matrix(ecbiltMeans[[k]])),
as.vector(as.matrix(ccsmMeans[[k]])), na.rm = T)
correlations <- append(correlations, niche['cor'])
}
names(correlations) <- climYears
corDf <- cbind(corDf, t(data.frame(correlations)))
colnames(corDf)[ncol(corDf)] <- paste0(ecbilt, ' & ', ccsm)
corDf$climYears <- paste0(corDf$climYears/1000, ' kybp')
colnames(corDf)[1] <- 'Time'
corDf$Time <- factor(corDf$Time,
levels = rev(mixedsort(corDf$Time)))
corDf_plot <- cbind(corDf[1], utils::stack(corDf[2:7]))
corDf_plot_pollen <- cbind(corDf[1], utils::stack(corDf[2:4]))
corDf_plot_gcm <- cbind(corDf[1], utils::stack(corDf[5:ncol(corDf)]))
colnames(corDf_plot) <- c("Time", "cor", "Models")
colnames(corDf_plot_pollen) <- c("Time", "cor", "Models")
colnames(corDf_plot_gcm) <- c("Time", "cor", "Models")
pdf(file = './pdf/correlation_line.pdf', width = 11, height = 8.5)
ggplot(corDf_plot, aes(Time, cor, color = Models, group = Models)) +
geom_point() + geom_line() + ylim(-0.35, 1.05) +
theme_classic() + geom_hline(yintercept = 1, linetype="dashed", color = "gray") +
labs(title = "Rank Correlation", x = "Time",
y = "cor") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_manual(values = c('#fc8d62','#8da0cb','#e78ac3', "#56B4E9", "#009E73", "#F0E442"))
ggplot(corDf_plot_pollen, aes(Time, cor, color = Models, group = Models)) +
geom_point() + geom_line() + ylim(-0.35, 1.05) +
theme_classic() + geom_hline(yintercept = 1, linetype="dashed", color = "grey") +
labs(title = "Rank Correlation", x = "Time",
y = "cor") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_manual(values = c('#fc8d62','#8da0cb','#e78ac3'))
ggplot(corDf_plot_gcm, aes(Time, cor, color = Models, group = Models)) +
geom_point() + geom_line() + ylim(-0.35, 1.05) +
theme_classic() + geom_hline(yintercept = 1, linetype="dashed", color = "gray") +
labs(title = "Rank Correlation", x = "Time",
y = "cor") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_manual(values = c("#56B4E9", "#009E73", "#F0E442"))
dev.off()
##### north/south quantile #####
nsQuant05Pollen_plot <- ggplot(bvPollen, aes(time, nsQuantVelocity_quant0p05, group = 1)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red", size=0.5) +
geom_point() + geom_line() +
ggtitle("Pollen") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
nsQuant95Pollen_plot <- ggplot(bvPollen, aes(time, nsQuantVelocity_quant0p95, group = 1)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "red", size=0.5) +
geom_point() + geom_line() +
ggtitle("Pollen") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
nsQuant05Hadley_plot <- ggplot(bvHadleyMeans, aes(time, nsQuantVelocity_quant0p05, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() + geom_line() +
ggtitle("SDM (GCM = HadAM3H)") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
nsQuant95Hadley_plot <- ggplot(bvHadleyMeans, aes(time, nsQuantVelocity_quant0p95, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() + geom_line() +
ggtitle("SDM (GCM = HadAM3H)") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
nsQuant05CCSM_plot <- ggplot(bvCCSMMeans, aes(time, nsQuantVelocity_quant0p05, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() + geom_line() +
ggtitle("SDM (GCM = CCSM)") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
nsQuant95CCSM_plot <- ggplot(bvCCSMMeans, aes(time, nsQuantVelocity_quant0p95, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() + geom_line() +
ggtitle("SDM (GCM = CCSM)") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
nsQuant05ECBilt_plot <- ggplot(bvECBiltMeans, aes(time, nsQuantVelocity_quant0p05, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() + geom_line() +
ggtitle("SDM (GCM = ECBilt)") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
nsQuant95ECBilt_plot <- ggplot(bvECBiltMeans, aes(time, nsQuantVelocity_quant0p95, group = 1)) +
geom_hline(yintercept=0, linetype="dashed", color = "red", size=0.5) +
geom_point() + geom_line() +
ggtitle("SDM (GCM = ECBilt)") +
xlab("time period") + ylab("velocity (m/yr)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 12, hjust = 0.5))
title05 <- ggdraw() +
draw_label(label = "Biotic Velocity of Southern Edge (5th quantile)\n",
fontface = 'bold', hjust = 0.5)
title95 <- ggdraw() +
draw_label("Biotic Velocity of Northern Edge (95th quantile)",
fontface = 'bold', hjust = 0.5)
pdf(file = './pdf/ns_quant.pdf', width = 11, height = 8.5)
plot_grid(title05, plot_grid(nsQuant05Pollen_plot, nsQuant05Hadley_plot,
nsQuant05CCSM_plot, nsQuant05ECBilt_plot, ncol = 2),
title95,
plot_grid(nsQuant95Pollen_plot, nsQuant95Hadley_plot,
nsQuant95CCSM_plot, nsQuant95ECBilt_plot, ncol = 2),
ncol = 1, rel_heights = c(0.2, 1))
plot_grid(title05, title95, nsQuant05Pollen_plot, nsQuant95Pollen_plot,
nsQuant05Hadley_plot, nsQuant95Hadley_plot,
nsQuant05CCSM_plot, nsQuant95CCSM_plot,
nsQuant05ECBilt_plot, nsQuant95ECBilt_plot,
ncol = 2, rel_heights = c(0.2, 1, 1 , 1, 1))
dev.off()
corr_list <- c()
df <- data.frame(row.names = c('Pollen', 'HadAM3H', 'CCSM', 'ECBilt'))
for(g in 1:22) {
st <- stack(pollenRast[[g]], hadleyMeans[[g]], ccsmMeans[[g]], ecbiltMeans[[g]])
x <- layerStats(st, 'pearson', na.rm = T)
corr_matrix <- as.data.frame(x$`pearson correlation coefficient`,
row.names = c('Pollen', 'HadAM3H', 'CCSM', 'ECBilt'))
df <- cbind(df, corr_matrix[1])
}
View(df)
colnames(df) <- paste0(climYears, ' YBP')
# do this for all GCMs & yrs #
corDf <- data.frame(climYears)
View(corDf)
for (gcm in gcmList) { # compare pollen to each gcm
correlations <- list()
for(k in 1:22) {
load(paste0('./workspaces/07 - ', gcm, ' genus merge'))
if(gcm == 'ccsm') g <- 'CCSM'
if(gcm == 'ecbilt') g <- 'ECBilt'
if(gcm == 'hadley') g <- 'HadAM3H'
thisRast <- raster::resample(meansList[[k]], pollenRast[[k]], method = 'bilinear')
niche <- enmSdm::compareNiches(as.vector(as.matrix(pollenRast[[k]])),
as.vector(as.matrix(thisRast)), na.rm = T)
correlations <- append(correlations, niche['cor'])
}
names(correlations) <- climYears
corDf <- cbind(corDf, t(data.frame(correlations)))
colnames(corDf)[ncol(corDf)] <- paste0('Pollen & ', g)
}
correlations <- list()
for(k in 1:22) { # hadley vs. ccsm
niche <- enmSdm::compareNiches(as.vector(as.matrix(hadleyMeans[[k]])),
as.vector(as.matrix(ccsmMeans[[k]])), na.rm = T)
correlations <- append(correlations, niche['cor'])
}
names(correlations) <- climYears
corDf <- cbind(corDf, t(data.frame(correlations)))
colnames(corDf)[ncol(corDf)] <- paste0(hadley, ' & ', ccsm)
correlations <- list()
for(k in 1:22) { # hadley vs. ecbilt
niche <- enmSdm::compareNiches(as.vector(as.matrix(hadleyMeans[[k]])),
as.vector(as.matrix(ecbiltMeans[[k]])), na.rm = T)
correlations <- append(correlations, niche['cor'])
}
names(correlations) <- climYears
corDf <- cbind(corDf, t(data.frame(correlations)))
colnames(corDf)[ncol(corDf)] <- paste0(hadley, ' & ', ecbilt)
correlations <- list()
for(k in 1:22) { # ecbilt vs. ccsm
niche <- enmSdm::compareNiches(as.vector(as.matrix(ecbiltMeans[[k]])),
as.vector(as.matrix(ccsmMeans[[k]])), na.rm = T)
correlations <- append(correlations, niche['cor'])
}
names(correlations) <- climYears
corDf <- cbind(corDf, t(data.frame(correlations)))
colnames(corDf)[ncol(corDf)] <- paste0(ecbilt, ' & ', ccsm)
corDf$climYears <- paste0(corDf$climYears/1000, ' kybp')
colnames(corDf)[1] <- 'Time'
corDf$Time <- factor(corDf$Time,
levels = rev(mixedsort(corDf$Time)))
corDf_plot <- cbind(corDf[1], utils::stack(corDf[2:7]))
corDf_plot_pollen <- cbind(corDf[1], utils::stack(corDf[2:4]))
corDf_plot_gcm <- cbind(corDf[1], utils::stack(corDf[5:ncol(corDf)]))
colnames(corDf_plot) <- c("Time", "cor", "Models")
colnames(corDf_plot_pollen) <- c("Time", "cor", "Models")
colnames(corDf_plot_gcm) <- c("Time", "cor", "Models")
pdf(file = './pdf/correlation_line.pdf', width = 11, height = 8.5)
ggplot(corDf_plot, aes(Time, cor, color = Models, group = Models)) +
geom_point() + geom_line() + ylim(-0.35, 1.05) +
theme_classic() + geom_hline(yintercept = 1, linetype="dashed", color = "gray") +
labs(title = "Rank Correlation", x = "Time",
y = "cor") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_manual(values = c('#fc8d62','#8da0cb','#e78ac3', "#56B4E9", "#009E73", "#F0E442"))
ggplot(corDf_plot_pollen, aes(Time, cor, color = Models, group = Models)) +
geom_point() + geom_line() + ylim(-0.35, 1.05) +
theme_classic() + geom_hline(yintercept = 1, linetype="dashed", color = "grey") +
labs(title = "Rank Correlation", x = "Time",
y = "cor") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_manual(values = c('#fc8d62','#8da0cb','#e78ac3'))
ggplot(corDf_plot_gcm, aes(Time, cor, color = Models, group = Models)) +
geom_point() + geom_line() + ylim(-0.35, 1.05) +
theme_classic() + geom_hline(yintercept = 1, linetype="dashed", color = "gray") +
labs(title = "Rank Correlation", x = "Time",
y = "cor") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_manual(values = c("#56B4E9", "#009E73", "#F0E442"))
dev.off()
